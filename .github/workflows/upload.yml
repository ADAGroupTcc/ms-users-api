name: Build, Test, and Push to Docker Hub

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Adjust Go version as necessary

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Build Go application
        run: go build -o app ./cmd/api

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${REPO_NAME}:${{ github.ref_name }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${REPO_NAME}:${{ github.ref_name }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/${REPO_NAME}:${{ github.ref_name }} ${{ secrets.DOCKER_USERNAME }}/${REPO_NAME}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${REPO_NAME}:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deployment
        run: |
          curl -L "${{ secrets.RENDER_TRIGGER_URL }}"
